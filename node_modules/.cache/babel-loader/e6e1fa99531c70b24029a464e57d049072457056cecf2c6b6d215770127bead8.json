{"ast":null,"code":"var _jsxFileName = \"/home/pierpaolodidato/Scrivania/coding/react/fortune-wheel/src/components/WheelComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_SPIN_TIME = 5000;\nconst FULL_ROTATIONS = 5;\nconst WheelComponent = ({\n  initialSegments,\n  segColors,\n  onFinished = () => {},\n  fontFamily = \"Arial\",\n  primaryColor = \"#000\",\n  primaryColoraround = \"#fff\",\n  contrastColor = \"#fff\",\n  buttonText = \"SPIN\",\n  isOnlyOnce = true,\n  resetOnClose = false\n}) => {\n  _s();\n  const [segments, setSegments] = useState(initialSegments);\n  const [editing, setEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(initialSegments.join(\"\\n\"));\n  const canvasRef = useRef(null);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n  const [angleCurrent, setAngleCurrent] = useState(0);\n  const angleRef = useRef(0);\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const targetAngleRef = useRef(0);\n  const size = 250; // era 150\n  const center = size + 10;\n  const spin = () => {\n    if (isSpinning || isOnlyOnce && hasFinished) return;\n    const randomIndex = Math.floor(Math.random() * segments.length);\n    const segmentAngle = 2 * Math.PI / segments.length;\n    const stopAngle = FULL_ROTATIONS * 2 * Math.PI - (randomIndex * segmentAngle + segmentAngle / 2);\n    targetAngleRef.current = stopAngle;\n    startTimeRef.current = performance.now();\n    setIsSpinning(true);\n    animate();\n  };\n  const animate = () => {\n    const now = performance.now();\n    const elapsed = now - startTimeRef.current;\n    const t = Math.min(elapsed / MAX_SPIN_TIME, 1);\n    const easeOut = Math.sin(t * Math.PI / 2);\n    const current = angleCurrent + (targetAngleRef.current - angleCurrent) * easeOut;\n    angleRef.current = current;\n    setAngleCurrent(current);\n    drawWheel(current);\n    if (t < 1) {\n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n      const result = getSegmentAtAngle(current);\n      setIsSpinning(false);\n      setHasFinished(true);\n      onFinished(result);\n    }\n  };\n  const getSegmentAtAngle = angle => {\n    const segmentAngle = 2 * Math.PI / segments.length;\n    const adjusted = (2 * Math.PI - angle % (2 * Math.PI)) % (2 * Math.PI);\n    return segments[Math.floor(adjusted / segmentAngle)];\n  };\n  const drawWheel = angle => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const segmentAngle = 2 * Math.PI / segments.length;\n    for (let i = 0; i < segments.length; i++) {\n      const start = angle + i * segmentAngle;\n      const end = start + segmentAngle;\n      ctx.beginPath();\n      ctx.moveTo(center, center);\n      ctx.arc(center, center, size, start, end);\n      ctx.closePath();\n      ctx.fillStyle = segColors[i % segColors.length] || \"#ccc\";\n      ctx.fill();\n      ctx.lineWidth = 0.7; // o un valore a tua scelta\n      ctx.strokeStyle = primaryColor;\n      ctx.stroke();\n      ctx.save();\n      ctx.translate(center, center);\n      ctx.rotate(start + segmentAngle / 2);\n      ctx.textAlign = \"right\";\n      ctx.fillStyle = contrastColor;\n      ctx.font = `bold 14px ${fontFamily}`;\n      ctx.fillText(segments[i], size - 40, 0); // distanziato dalla circonferenza\n      ctx.restore();\n    }\n\n    // Cerchio centrale\n    ctx.beginPath();\n    ctx.arc(center, center, 35, 0, 2 * Math.PI);\n    ctx.fillStyle = primaryColor;\n    ctx.fill();\n    ctx.strokeStyle = contrastColor;\n    ctx.lineWidth = 3;\n    ctx.stroke();\n    ctx.fillStyle = contrastColor;\n    ctx.font = `bold 16px ${fontFamily}`;\n    ctx.textAlign = \"center\";\n    ctx.fillText(buttonText, center, center + 5);\n\n    // Cerchio esterno\n    ctx.beginPath();\n    ctx.arc(center, center, size, 0, 2 * Math.PI);\n    ctx.strokeStyle = primaryColoraround;\n    ctx.lineWidth = 20;\n    ctx.stroke();\n\n    // Freccia\n    ctx.beginPath();\n    ctx.moveTo(center - 10, center - size - 10);\n    ctx.lineTo(center + 10, center - size - 10);\n    ctx.lineTo(center, center - size - 35);\n    ctx.closePath();\n    ctx.fillStyle = contrastColor;\n    ctx.fill();\n  };\n  useEffect(() => {\n    drawWheel(angleCurrent);\n  }, [segments]);\n  const handleEditToggle = () => setEditing(!editing);\n  const handleSave = () => {\n    const names = inputValue.split(\"\\n\").map(n => n.trim()).filter(n => n !== \"\");\n    if (names.length >= 2) {\n      setSegments(names);\n      setEditing(false);\n      setHasFinished(false);\n      setAngleCurrent(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center flex-col w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 3 * center,\n      height: 2 * center,\n      style: {\n        width: \"100%\",\n        height: \"auto\",\n        cursor: isSpinning || isOnlyOnce && hasFinished ? \"default\" : \"pointer\"\n      },\n      onClick: spin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditToggle,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mx-auto\",\n        style: {\n          display: \"block\",\n          marginTop: 20\n        },\n        children: editing ? \"Annulla\" : \"Modifica nomi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), editing && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: segments.length + 2,\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        style: {\n          width: \"100%\",\n          fontFamily: \"monospace\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"6px\",\n          padding: \"10px\",\n          boxSizing: \"border-box\",\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mt-4\",\n        children: \"Salva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 7\n  }, this);\n};\n_s(WheelComponent, \"f4wTl+HdKfZSMc6qDiVAVyg0ijY=\");\n_c = WheelComponent;\nexport default WheelComponent;\nvar _c;\n$RefreshReg$(_c, \"WheelComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","MAX_SPIN_TIME","FULL_ROTATIONS","WheelComponent","initialSegments","segColors","onFinished","fontFamily","primaryColor","primaryColoraround","contrastColor","buttonText","isOnlyOnce","resetOnClose","_s","segments","setSegments","editing","setEditing","inputValue","setInputValue","join","canvasRef","isSpinning","setIsSpinning","hasFinished","setHasFinished","angleCurrent","setAngleCurrent","angleRef","animationRef","startTimeRef","targetAngleRef","size","center","spin","randomIndex","Math","floor","random","length","segmentAngle","PI","stopAngle","current","performance","now","animate","elapsed","t","min","easeOut","sin","drawWheel","requestAnimationFrame","cancelAnimationFrame","result","getSegmentAtAngle","angle","adjusted","canvas","ctx","getContext","clearRect","width","height","i","start","end","beginPath","moveTo","arc","closePath","fillStyle","fill","lineWidth","strokeStyle","stroke","save","translate","rotate","textAlign","font","fillText","restore","lineTo","handleEditToggle","handleSave","names","split","map","n","trim","filter","className","children","ref","style","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","marginTop","rows","value","onChange","e","target","border","borderRadius","padding","boxSizing","_c","$RefreshReg$"],"sources":["/home/pierpaolodidato/Scrivania/coding/react/fortune-wheel/src/components/WheelComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst MAX_SPIN_TIME = 5000;\nconst FULL_ROTATIONS = 5;\n\nconst WheelComponent = ({\n  initialSegments,\n  segColors,\n  onFinished = () => { },\n  fontFamily = \"Arial\",\n  primaryColor = \"#000\",\n  primaryColoraround = \"#fff\",\n  contrastColor = \"#fff\",\n  buttonText = \"SPIN\",\n  isOnlyOnce = true,\n  resetOnClose = false,\n}) => {\n  const [segments, setSegments] = useState(initialSegments);\n  const [editing, setEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(initialSegments.join(\"\\n\"));\n\n  const canvasRef = useRef(null);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n  const [angleCurrent, setAngleCurrent] = useState(0);\n  const angleRef = useRef(0);\n  const animationRef = useRef(null);\n  const startTimeRef = useRef(null);\n  const targetAngleRef = useRef(0);\n\n  const size = 250; // era 150\n  const center = size + 10;\n\n\n  const spin = () => {\n    if (isSpinning || (isOnlyOnce && hasFinished)) return;\n\n    const randomIndex = Math.floor(Math.random() * segments.length);\n    const segmentAngle = (2 * Math.PI) / segments.length;\n    const stopAngle =\n      FULL_ROTATIONS * 2 * Math.PI -\n      (randomIndex * segmentAngle + segmentAngle / 2);\n\n    targetAngleRef.current = stopAngle;\n    startTimeRef.current = performance.now();\n    setIsSpinning(true);\n    animate();\n  };\n\n  const animate = () => {\n    const now = performance.now();\n    const elapsed = now - startTimeRef.current;\n    const t = Math.min(elapsed / MAX_SPIN_TIME, 1);\n    const easeOut = Math.sin((t * Math.PI) / 2);\n\n    const current =\n      angleCurrent + (targetAngleRef.current - angleCurrent) * easeOut;\n    angleRef.current = current;\n    setAngleCurrent(current);\n    drawWheel(current);\n\n    if (t < 1) {\n      animationRef.current = requestAnimationFrame(animate);\n    } else {\n      cancelAnimationFrame(animationRef.current);\n      const result = getSegmentAtAngle(current);\n      setIsSpinning(false);\n      setHasFinished(true);\n      onFinished(result);\n    }\n  };\n\n  const getSegmentAtAngle = (angle) => {\n    const segmentAngle = (2 * Math.PI) / segments.length;\n    const adjusted = (2 * Math.PI - (angle % (2 * Math.PI))) % (2 * Math.PI);\n    return segments[Math.floor(adjusted / segmentAngle)];\n  };\n\n  const drawWheel = (angle) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const segmentAngle = (2 * Math.PI) / segments.length;\n\n    for (let i = 0; i < segments.length; i++) {\n      const start = angle + i * segmentAngle;\n      const end = start + segmentAngle;\n\n      ctx.beginPath();\n      ctx.moveTo(center, center);\n      ctx.arc(center, center, size, start, end);\n      ctx.closePath();\n      ctx.fillStyle = segColors[i % segColors.length] || \"#ccc\";\n      ctx.fill();\n      ctx.lineWidth = 0.7; // o un valore a tua scelta\n      ctx.strokeStyle = primaryColor;\n      ctx.stroke();\n      ctx.save();\n      ctx.translate(center, center);\n      ctx.rotate(start + segmentAngle / 2);\n      ctx.textAlign = \"right\";\n      ctx.fillStyle = contrastColor;\n      ctx.font = `bold 14px ${fontFamily}`;\n      ctx.fillText(segments[i], size - 40, 0); // distanziato dalla circonferenza\n      ctx.restore();\n    }\n\n    // Cerchio centrale\n    ctx.beginPath();\n    ctx.arc(center, center, 35, 0, 2 * Math.PI);\n    ctx.fillStyle = primaryColor;\n    ctx.fill();\n    ctx.strokeStyle = contrastColor;\n    ctx.lineWidth = 3;\n    ctx.stroke();\n\n    ctx.fillStyle = contrastColor;\n    ctx.font = `bold 16px ${fontFamily}`;\n    ctx.textAlign = \"center\";\n    ctx.fillText(buttonText, center, center + 5);\n\n    // Cerchio esterno\n    ctx.beginPath();\n    ctx.arc(center, center, size, 0, 2 * Math.PI);\n    ctx.strokeStyle = primaryColoraround;\n    ctx.lineWidth = 20;\n    ctx.stroke();\n\n    // Freccia\n    ctx.beginPath();\n    ctx.moveTo(center - 10, center - size - 10);\n    ctx.lineTo(center + 10, center - size - 10);\n    ctx.lineTo(center, center - size - 35);\n    ctx.closePath();\n    ctx.fillStyle = contrastColor;\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    drawWheel(angleCurrent);\n  }, [segments]);\n\n  const handleEditToggle = () => setEditing(!editing);\n\n  const handleSave = () => {\n    const names = inputValue\n      .split(\"\\n\")\n      .map((n) => n.trim())\n      .filter((n) => n !== \"\");\n    if (names.length >= 2) {\n      setSegments(names);\n      setEditing(false);\n      setHasFinished(false);\n      setAngleCurrent(0);\n    }\n  };\n\n  return (\n      <div className=\"flex justify-center items-center flex-col w-full\">\n        <canvas\n          ref={canvasRef}\n          width={3 * center}\n          height={2 * center}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n            cursor: isSpinning || (isOnlyOnce && hasFinished) ? \"default\" : \"pointer\"\n          }}\n          onClick={spin}\n        />\n      <div className=\"text-center mt-4\">\n        <button\n          onClick={handleEditToggle}\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mx-auto\"\n          style={{ display: \"block\", marginTop: 20 }}\n        >\n          {editing ? \"Annulla\" : \"Modifica nomi\"}\n        </button>\n      </div>\n      {editing && (\n        <div style={{ marginTop: 10 }}>\n          <textarea\n            rows={segments.length + 2}\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            style={{\n              width: \"100%\",\n              fontFamily: \"monospace\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"6px\",\n              padding: \"10px\",\n              boxSizing: \"border-box\",\n              marginTop: \"10px\"\n            }}\n          />\n          <br />\n          <button\n            onClick={handleSave}\n            className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded mt-4\"\n          >\n            Salva\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WheelComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}